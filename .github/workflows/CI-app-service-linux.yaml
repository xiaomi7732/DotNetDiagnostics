name: CI-opendd-linux-demo-app-service

env:
    IMAGE_NAME: opendd-webapi-example
    DOTNET_VERSION: "7.x" # set this to the .NET Core version to use
    TARGET_PROJECT: "examples/WebAPIExample/WebAPIExample.csproj"

on:
    release:
        types: [published]

permissions:
    contents: read

jobs:
    push_to_registry:
        name: Push WebAPIExample to Docker Hub
        runs-on: ubuntu-latest
        steps:
            - name: Check out the repo
              uses: actions/checkout@v3

            - name: Set up .NET SDK
              uses: actions/setup-dotnet@v2
              with:
                  dotnet-version: ${{ env.DOTNET_VERSION }}

            - name: Set up dependency caching for faster builds
              uses: actions/cache@v3
              with:
                  path: ~/.nuget/packages
                  key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-nuget-

            - name: Publish with dotnet
              run: dotnet publish ${{ env.TARGET_PROJECT }} --configuration Release

            - name: Log in to Docker Hub
              uses: docker/login-action@v2
              with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v4.5.0
              with:
                images: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
            
            - name: Build and push Docker image
              uses: docker/build-push-action@v4.0.0
              with:
                context: ./examples/WebAPIExample
                file: ./examples/dockerfile
                push: true
                tags: ${{ steps.meta.outputs.tags }}
                labels: ${{ steps.meta.outputs.labels }}